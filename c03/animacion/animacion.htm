<!DOCTYPE html>
<html>

<head>
    <title>Animación de Esfera y Cubo</title>
    <script type="text/javascript" src="https://threejs.org/build/three.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/dat-gui/0.7.7/dat.gui.min.js"></script>
    <style>
        body {
            margin: 0;
            overflow: hidden;
        }
    </style>
</head>

<body>

    <div id="WebGL-output"></div>

    <script type="text/javascript">
        var scene, camera, renderer, sphere, cube, ground;
        var sphereAnimationSpeed = 0.01;
        var cubeRotationSpeed = 0.02;

        var guiControls = {
            cameraX: -10,
            cameraY: 10,
            cameraZ: 10,
            sphereSpeed: 0.01,
            cubeSpeed: 0.02,
            directionalLightIntensity: 0.5
        };

        function init() {
            scene = new THREE.Scene();
            scene.background = new THREE.Color(0x888888);

            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
            camera.position.set(guiControls.cameraX, guiControls.cameraY, guiControls.cameraZ);
            camera.lookAt(0, 0, 0);

            renderer = new THREE.WebGLRenderer();
            renderer.setSize(window.innerWidth, window.innerHeight);
            document.getElementById("WebGL-output").appendChild(renderer.domElement);

            var groundGeometry = new THREE.PlaneGeometry(30, 30);
            var groundMaterial = new THREE.MeshLambertMaterial({ color: 0x444444 });
            ground = new THREE.Mesh(groundGeometry, groundMaterial);
            ground.rotation.x = -Math.PI / 2;
            ground.position.set(0, -3, 0);
            ground.receiveShadow = true;
            scene.add(ground);

            var ambientLight = new THREE.AmbientLight(0x404040);
            scene.add(ambientLight);

            var directionalLight = new THREE.DirectionalLight(0xffffff, guiControls.directionalLightIntensity);
            directionalLight.position.set(10, 10, 10);
            directionalLight.castShadow = true;
            directionalLight.shadow.mapSize.width = 1024;
            directionalLight.shadow.mapSize.height = 1024;
            directionalLight.shadow.camera.near = 0.1;
            directionalLight.shadow.camera.far = 50;
            scene.add(directionalLight);

            sphere = createSphere();
            scene.add(sphere);

            cube = createCube();
            scene.add(cube);

            var gui = new dat.GUI();
            gui.add(guiControls, 'cameraX', -20, 20).name('Posición X de la Cámara');
            gui.add(guiControls, 'cameraY', -20, 20).name('Posición Y de la Cámara');
            gui.add(guiControls, 'cameraZ', -20, 20).name('Posición Z de la Cámara');
            gui.add(guiControls, 'sphereSpeed', 0, 0.1).name('Velocidad de la Esfera');
            gui.add(guiControls, 'cubeSpeed', 0, 0.1).name('Velocidad del Cubo');
            gui.add(guiControls, 'directionalLightIntensity', 0, 1).name('Intensidad de Luz Direccional');
        }

        function createSphere() {
            var sphereGeometry = new THREE.SphereGeometry(3, 32, 32);
            var sphereMaterial = new THREE.MeshLambertMaterial({ color: 0x00ff00 });
            var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);
            sphere.position.set(-8, 3, 0);
            sphere.castShadow = true;
            return sphere;
        }

        function createCube() {
            var cubeGeometry = new THREE.BoxGeometry(2, 2, 2);
            var cubeMaterial = new THREE.MeshLambertMaterial({ color: 0x0000ff });
            var cube = new THREE.Mesh(cubeGeometry, cubeMaterial);
            cube.position.set(8, 3, 0);
            cube.castShadow = true;
            return cube;
        }

        function animate() {
            requestAnimationFrame(animate);

            sphere.position.y = Math.sin(Date.now() * guiControls.sphereSpeed);
            cube.rotation.x += guiControls.cubeSpeed;
            cube.rotation.y += guiControls.cubeSpeed;

            camera.position.set(guiControls.cameraX, guiControls.cameraY, guiControls.cameraZ);
            camera.lookAt(0, 0, 0);

            renderer.render(scene, camera);
        }

        init();
        animate();
    </script>
</body>

</html>
